#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'


require 'strscan'
require_relative './tokenizer.rb'
require_relative './node.rb'

module Rgo
  class Parser < Racc::Parser

module_eval(<<'...end parse.y/module_eval...', 'parse.y', 205)

def parse(str)
  @q = Tokenizer.new(str).tokens

  puts @q.inspect

  do_parse
end

def next_token
  @q.shift
end

def on_error(error_token_id, error_value, value_stack)
  token_name = token_to_str(error_token_id)
  token = error_value.to_s.inspect

  str = 'parse error on '
  str << token_name << ' ' unless token_name == token
  str << token
  raise str
end
...end parse.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    18,    39,    22,    41,    24,    19,    28,    20,    25,    21,
    87,    22,    23,    24,    50,    27,   117,    42,    29,    31,
    34,    35,    51,    43,    22,    38,    24,    48,    49,    61,
    18,    44,    36,    37,    38,    19,    28,    20,    25,    21,
    44,    22,    23,    24,    45,    27,    46,    38,    29,    31,
    34,    35,    47,    24,    66,    46,    67,    77,    78,    87,
    18,    47,    36,    37,    38,    19,    28,    20,    25,    21,
    82,    22,    23,    24,    38,    27,    92,   -28,    29,    31,
    34,    35,    97,    84,    93,   -28,    51,    94,   100,    99,
    18,    80,    36,    37,    38,    19,    28,    20,    25,    21,
   116,    22,    23,    24,   110,    27,    44,   -29,    29,    31,
    34,    35,   111,   -65,   -63,   -29,    99,   129,   116,   nil,
   nil,    46,    36,    37,    38,    18,    90,    47,    91,   nil,
    19,    28,    20,    25,    21,   nil,    22,    23,    24,   123,
    27,   nil,   nil,    29,    31,    34,    35,    93,    53,    54,
    55,    56,    57,    58,    59,    60,   127,    36,    37,    38,
    18,   nil,   nil,    95,   128,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,   nil,    27,   nil,   nil,    29,    31,
    34,    35,   -50,   -50,   -50,   -50,   -50,   -50,   -50,   -50,
    18,   nil,    36,    37,    38,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,   nil,    27,   nil,   nil,    29,    31,
    34,    35,    53,    54,    55,    56,    57,    58,    59,    60,
    18,   nil,    36,    37,    38,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,   nil,    27,   nil,   nil,    29,    31,
    34,    35,    53,    54,    55,    56,    57,    58,    59,    60,
   nil,   nil,    36,    37,    38,    18,   nil,   nil,   121,   122,
    19,    28,    20,    25,    21,   nil,    22,    23,    24,   nil,
    27,   nil,   nil,    29,    31,    34,    35,    53,    54,    55,
    56,    57,    58,    59,    60,    18,   nil,    36,    37,    38,
    19,    28,    20,    25,    21,   nil,    22,    23,    24,   nil,
    27,   nil,   nil,    29,    31,    34,    35,    53,    54,    55,
    56,    57,    58,    59,    60,   nil,   nil,    36,    37,    38,
    18,   nil,   nil,   126,   nil,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,   nil,    27,   nil,   nil,    29,    31,
    34,    35,    53,    54,    55,    56,    57,    58,    59,    60,
    18,   nil,    36,    37,    38,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,   nil,    27,   nil,   nil,    29,    31,
    34,    35,    53,    54,    55,    56,    57,    58,    59,    60,
   nil,   nil,    36,    37,    38,    18,   nil,   nil,   131,   nil,
    19,    28,    20,    25,    21,   nil,    22,    23,    24,   nil,
    27,   nil,   nil,    29,    31,    34,    35,    53,    54,    55,
    56,    57,    58,    59,    60,   nil,   nil,    36,    37,    38,
    18,   nil,   nil,   134,   nil,    19,    28,    20,    25,    21,
   nil,    22,    23,    24,    28,    27,    64,    62,    29,    31,
    34,    35,   nil,   nil,   nil,   nil,    29,    31,   nil,   nil,
   nil,   nil,    36,    37,    38,    28,   nil,    64,    62,   nil,
    36,    37,    74,   nil,    64,    70,   nil,    29,    31,   nil,
   nil,   nil,   nil,   nil,    29,    31,   nil,   nil,   nil,   nil,
   nil,    36,    37,    28,   nil,    64,    62,   nil,    36,    37,
    28,   nil,    64,    62,   nil,    29,    31,   nil,   nil,   nil,
   nil,   nil,    29,    31,   nil,   nil,   nil,   nil,   nil,    36,
    37,    28,   nil,    64,    62,   nil,    36,    37,    74,   nil,
    64,    70,   nil,    29,    31,   nil,   nil,   nil,   nil,   nil,
    29,    31,   nil,   nil,   nil,   nil,   nil,    36,    37,    74,
   nil,    64,    70,   nil,    36,    37,    28,   nil,    64,    62,
   nil,    29,    31,   nil,   nil,   nil,   nil,   nil,    29,    31,
   nil,   nil,   nil,   nil,   nil,    36,    37,   nil,   nil,   nil,
   nil,   nil,    36,    37 ]

racc_action_check = [
     0,     1,    85,    18,    85,     0,     0,     0,     0,     0,
    85,     0,     0,     0,    25,     0,   101,    19,     0,     0,
     0,     0,    25,    20,   101,    85,   101,    22,    23,    27,
     2,    21,     0,     0,     0,     2,     2,     2,     2,     2,
    62,     2,     2,     2,    21,     2,    21,   101,     2,     2,
     2,     2,    21,    66,    35,    62,    39,    46,    47,    66,
    43,    62,     2,     2,     2,    43,    43,    43,    43,    43,
    51,    43,    43,    43,    66,    43,    71,    74,    43,    43,
    43,    43,    80,    61,    71,    74,    64,    78,    82,    80,
    48,    48,    43,    43,    43,    48,    48,    48,    48,    48,
   100,    48,    48,    48,    96,    48,    70,    70,    48,    48,
    48,    48,    96,   103,   104,    70,   111,   116,   128,   nil,
   nil,    70,    48,    48,    48,    69,    68,    70,    69,   nil,
    69,    69,    69,    69,    69,   nil,    69,    69,    69,   109,
    69,   nil,   nil,    69,    69,    69,    69,   109,    68,    68,
    68,    68,    68,    68,    68,    68,   113,    69,    69,    69,
    79,   nil,   nil,    79,   113,    79,    79,    79,    79,    79,
   nil,    79,    79,    79,   nil,    79,   nil,   nil,    79,    79,
    79,    79,     7,     7,     7,     7,     7,     7,     7,     7,
    90,   nil,    79,    79,    79,    90,    90,    90,    90,    90,
   nil,    90,    90,    90,   nil,    90,   nil,   nil,    90,    90,
    90,    90,    26,    26,    26,    26,    26,    26,    26,    26,
    97,   nil,    90,    90,    90,    97,    97,    97,    97,    97,
   nil,    97,    97,    97,   nil,    97,   nil,   nil,    97,    97,
    97,    97,    63,    63,    63,    63,    63,    63,    63,    63,
   nil,   nil,    97,    97,    97,   107,   nil,   nil,   107,   107,
   107,   107,   107,   107,   107,   nil,   107,   107,   107,   nil,
   107,   nil,   nil,   107,   107,   107,   107,    75,    75,    75,
    75,    75,    75,    75,    75,   110,   nil,   107,   107,   107,
   110,   110,   110,   110,   110,   nil,   110,   110,   110,   nil,
   110,   nil,   nil,   110,   110,   110,   110,    76,    76,    76,
    76,    76,    76,    76,    76,   nil,   nil,   110,   110,   110,
   112,   nil,   nil,   112,   nil,   112,   112,   112,   112,   112,
   nil,   112,   112,   112,   nil,   112,   nil,   nil,   112,   112,
   112,   112,    81,    81,    81,    81,    81,    81,    81,    81,
   122,   nil,   112,   112,   112,   122,   122,   122,   122,   122,
   nil,   122,   122,   122,   nil,   122,   nil,   nil,   122,   122,
   122,   122,    83,    83,    83,    83,    83,    83,    83,    83,
   nil,   nil,   122,   122,   122,   124,   nil,   nil,   124,   nil,
   124,   124,   124,   124,   124,   nil,   124,   124,   124,   nil,
   124,   nil,   nil,   124,   124,   124,   124,   133,   133,   133,
   133,   133,   133,   133,   133,   nil,   nil,   124,   124,   124,
   130,   nil,   nil,   130,   nil,   130,   130,   130,   130,   130,
   nil,   130,   130,   130,    34,   130,    34,    34,   130,   130,
   130,   130,   nil,   nil,   nil,   nil,    34,    34,   nil,   nil,
   nil,   nil,   130,   130,   130,    41,   nil,    41,    41,   nil,
    34,    34,    44,   nil,    44,    44,   nil,    41,    41,   nil,
   nil,   nil,   nil,   nil,    44,    44,   nil,   nil,   nil,   nil,
   nil,    41,    41,    45,   nil,    45,    45,   nil,    44,    44,
    50,   nil,    50,    50,   nil,    45,    45,   nil,   nil,   nil,
   nil,   nil,    50,    50,   nil,   nil,   nil,   nil,   nil,    45,
    45,    52,   nil,    52,    52,   nil,    50,    50,    93,   nil,
    93,    93,   nil,    52,    52,   nil,   nil,   nil,   nil,   nil,
    93,    93,   nil,   nil,   nil,   nil,   nil,    52,    52,    94,
   nil,    94,    94,   nil,    93,    93,   129,   nil,   129,   129,
   nil,    94,    94,   nil,   nil,   nil,   nil,   nil,   129,   129,
   nil,   nil,   nil,   nil,   nil,    94,    94,   nil,   nil,   nil,
   nil,   nil,   129,   129 ]

racc_action_pointer = [
    -8,     1,    22,   nil,   nil,   nil,   nil,   150,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -6,     3,
     7,    22,    10,    12,   nil,    -8,   180,    12,   nil,   nil,
   nil,   nil,   nil,   nil,   420,    38,   nil,   nil,   nil,    56,
   nil,   441,   nil,    52,   448,   469,    32,    41,    82,   nil,
   476,    53,   497,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    66,    31,   210,    56,   nil,    32,   nil,   116,   117,
    97,    66,   nil,   nil,    67,   245,   275,   nil,    78,   152,
    72,   310,    79,   340,   nil,   -17,   nil,   nil,   nil,   nil,
   182,   nil,   nil,   504,   525,   nil,    94,   212,   nil,   nil,
    83,     5,   nil,   102,   103,   nil,   nil,   247,   nil,   129,
   277,    99,   312,   146,   nil,   nil,    86,   nil,   nil,   nil,
   nil,   nil,   342,   nil,   377,   nil,   nil,   nil,   101,   532,
   412,   nil,   nil,   375,   nil ]

racc_action_default = [
    -4,   -84,    -1,    -2,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -84,   -84,
   -84,   -44,   -84,   -84,   -38,   -49,   -41,   -84,   -45,   -46,
   -47,   -51,   -52,   -53,   -84,   -84,   -80,   -81,   -82,   -84,
    -3,   -84,   -22,    -4,   -83,   -84,   -84,   -84,    -4,   -37,
   -84,   -84,   -84,   -72,   -73,   -74,   -75,   -76,   -77,   -78,
   -79,   -84,   -44,   -54,   -49,   -50,   -84,   135,   -84,   -84,
   -44,   -84,   -25,   -27,   -45,   -30,   -39,   -43,   -84,   -84,
   -84,   -40,   -84,   -48,   -42,   -84,   -56,   -58,   -59,   -60,
    -4,   -23,   -24,   -83,   -83,   -33,   -84,    -4,   -34,   -36,
   -83,   -84,   -57,   -59,   -60,   -61,   -64,   -84,   -26,   -84,
    -4,   -84,   -84,   -84,   -67,   -69,   -84,   -55,   -62,   -63,
   -65,   -19,    -4,   -71,   -84,   -35,   -32,   -66,   -83,   -84,
   -84,   -31,   -68,   -70,   -20 ]

racc_goto_table = [
    40,     2,    65,    71,    89,    98,   115,    88,    86,    65,
   114,     1,    65,    65,    63,   106,   108,   105,    65,    96,
    65,    68,    85,   104,    75,    76,   103,   102,   101,   113,
    81,   106,    83,   118,   115,   nil,   125,   nil,   132,   119,
   nil,   nil,   120,   nil,    69,   nil,   nil,   nil,   nil,    79,
   nil,   nil,   nil,   109,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    65,    65,   nil,   nil,   nil,   nil,    40,   nil,   nil,
   nil,   nil,   nil,    75,    75,   nil,   nil,    40,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   107,   nil,   nil,   nil,   nil,   nil,    65,   112,   nil,
   nil,   nil,   nil,   nil,   nil,    40,   nil,   nil,   nil,   133,
    40,   124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,   130,   nil,   nil,   nil,   nil,    40 ]

racc_goto_check = [
     3,     2,     7,    20,     4,    24,    22,    12,    31,     7,
    34,     1,     7,     7,    18,     8,    21,    32,     7,    23,
     7,    18,    29,     4,    18,    18,    12,    31,    30,    33,
    18,     8,    18,    32,    22,   nil,    24,   nil,    34,     4,
   nil,   nil,    12,   nil,     2,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     7,     7,   nil,   nil,   nil,   nil,     3,   nil,   nil,
   nil,   nil,   nil,    18,    18,   nil,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,   nil,     7,     2,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,    18,
     3,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     2,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,    11,     1,    -2,   -62,   nil,   nil,   -32,   -70,   nil,
   nil,   nil,   -59,   nil,   nil,   nil,   nil,   nil,   -20,   nil,
   -41,   -77,   -94,   -61,   -75,   nil,   nil,   nil,   nil,   -44,
   -57,   -58,   -68,   -71,   -90 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,    14,    15,    16,    17,    26,   nil,
   nil,    72,    73,   nil,   nil,    30,    52,    32,    33,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 44, :_reduce_none,
  1, 45, :_reduce_none,
  2, 45, :_reduce_3,
  0, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  6, 56, :_reduce_19,
  8, 56, :_reduce_20,
  2, 62, :_reduce_none,
  2, 49, :_reduce_22,
  4, 48, :_reduce_23,
  4, 50, :_reduce_24,
  1, 63, :_reduce_25,
  3, 63, :_reduce_26,
  1, 64, :_reduce_none,
  1, 64, :_reduce_28,
  1, 64, :_reduce_29,
  1, 64, :_reduce_30,
  7, 51, :_reduce_31,
  6, 51, :_reduce_32,
  4, 51, :_reduce_33,
  1, 66, :_reduce_34,
  3, 66, :_reduce_35,
  1, 67, :_reduce_36,
  2, 52, :_reduce_37,
  1, 47, :_reduce_38,
  3, 53, :_reduce_39,
  3, 54, :_reduce_40,
  1, 57, :_reduce_41,
  3, 58, :_reduce_42,
  3, 61, :_reduce_43,
  1, 61, :_reduce_44,
  1, 61, :_reduce_45,
  1, 61, :_reduce_46,
  1, 61, :_reduce_none,
  3, 61, :_reduce_48,
  1, 61, :_reduce_49,
  1, 61, :_reduce_none,
  1, 61, :_reduce_51,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  2, 59, :_reduce_54,
  5, 60, :_reduce_55,
  1, 72, :_reduce_none,
  2, 72, :_reduce_57,
  1, 74, :_reduce_58,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 73, :_reduce_none,
  2, 73, :_reduce_62,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  6, 70, :_reduce_66,
  1, 76, :_reduce_none,
  3, 76, :_reduce_68,
  1, 77, :_reduce_none,
  3, 77, :_reduce_70,
  6, 71, :_reduce_71,
  1, 69, :_reduce_72,
  1, 69, :_reduce_73,
  1, 69, :_reduce_74,
  1, 69, :_reduce_75,
  1, 69, :_reduce_76,
  1, 69, :_reduce_77,
  1, 69, :_reduce_78,
  1, 69, :_reduce_79,
  1, 68, :_reduce_80,
  1, 68, :_reduce_81,
  1, 55, :_reduce_82,
  0, 65, :_reduce_none ]

racc_reduce_n = 84

racc_shift_n = 135

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "^" => 3,
  "*" => 4,
  "/" => 5,
  "+" => 6,
  "-" => 7,
  :KEYWORD_IF => 8,
  :LPAREN => 9,
  :RPAREN => 10,
  :KEYWORD_END => 11,
  :KEYWORD_ELSE => 12,
  :KEYWORD_REQUIRE => 13,
  :STRING => 14,
  :KEYWORD_MODULE => 15,
  :CONSTANT => 16,
  :IDENTIFIER => 17,
  :COMMA => 18,
  :KEYWORD_DEF => 19,
  :KEYWORD_INCLUDE => 20,
  :COMMENT => 21,
  :KEYWORD_ASSIGN => 22,
  :KEYWORD_ALIAS => 23,
  "(" => 24,
  ")" => 25,
  :INTEGER => 26,
  :INSTANCE_VARIABLE => 27,
  :KEYWORD_RETURN => 28,
  :KEYWORD_CLASS => 29,
  :DOT => 30,
  :COLON => 31,
  :PLUS => 32,
  :MINUS => 33,
  :MULTIPLY => 34,
  :DIVIDE => 35,
  :GREATER => 36,
  :LESS => 37,
  :EQUAL => 38,
  :MOD => 39,
  :KEYWORD_TRUE => 40,
  :KEYWORD_FALSE => 41,
  :BLANK_LINE => 42 }

racc_nt_base = 43

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"^\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "KEYWORD_IF",
  "LPAREN",
  "RPAREN",
  "KEYWORD_END",
  "KEYWORD_ELSE",
  "KEYWORD_REQUIRE",
  "STRING",
  "KEYWORD_MODULE",
  "CONSTANT",
  "IDENTIFIER",
  "COMMA",
  "KEYWORD_DEF",
  "KEYWORD_INCLUDE",
  "COMMENT",
  "KEYWORD_ASSIGN",
  "KEYWORD_ALIAS",
  "\"(\"",
  "\")\"",
  "INTEGER",
  "INSTANCE_VARIABLE",
  "KEYWORD_RETURN",
  "KEYWORD_CLASS",
  "DOT",
  "COLON",
  "PLUS",
  "MINUS",
  "MULTIPLY",
  "DIVIDE",
  "GREATER",
  "LESS",
  "EQUAL",
  "MOD",
  "KEYWORD_TRUE",
  "KEYWORD_FALSE",
  "BLANK_LINE",
  "$start",
  "target",
  "statement_list",
  "statement",
  "comment_statement",
  "module_statement",
  "require_statement",
  "func_call",
  "func_def",
  "include_statement",
  "assignment_statement",
  "constant_assignment_statement",
  "blank_line",
  "if_statement",
  "expression_statement",
  "alias_statement",
  "return_statement",
  "class_statement",
  "expression",
  "else_statement",
  "args",
  "arg",
  "none",
  "func_def_args",
  "func_def_arg",
  "boolean",
  "number_operator",
  "class_new",
  "class_instance_method_call",
  "instance_variables_def",
  "methods_def",
  "instance_variable_def",
  "method_def",
  "arg_options",
  "arg_option" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parse.y', 17)
  def _reduce_3(val, _values)
     val
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parse.y', 40)
  def _reduce_19(val, _values)
     Node.new(:if, val[2], val[4])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 43)
  def _reduce_20(val, _values)
     Node.new(:if_else, val[2], [val[4], val[6]])
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parse.y', 49)
  def _reduce_22(val, _values)
     Node.new(:require, val[1])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 53)
  def _reduce_23(val, _values)
     Node.new(:module, val[1], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 56)
  def _reduce_24(val, _values)
     Node.new(:func_call, val[0], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 59)
  def _reduce_25(val, _values)
     Array(val[0]).flatten
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 60)
  def _reduce_26(val, _values)
     [val[0], val[2]].flatten
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parse.y', 65)
  def _reduce_28(val, _values)
     Node.new(:string, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 66)
  def _reduce_29(val, _values)
     Node.new(:variable, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 67)
  def _reduce_30(val, _values)
     val[0]
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 73)
  def _reduce_31(val, _values)
     Node.new(:func_def, val[1], [val[3], val[5]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 76)
  def _reduce_32(val, _values)
     Node.new(:func_def, val[1], [nil, val[4]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 79)
  def _reduce_33(val, _values)
     Node.new(:func_def, val[1], [nil, val[2]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 84)
  def _reduce_34(val, _values)
     val[0]
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 85)
  def _reduce_35(val, _values)
     [val[0], val[2]].flatten
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 89)
  def _reduce_36(val, _values)
     Node.new(:variable, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 92)
  def _reduce_37(val, _values)
     Node.new(:include, val[1])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 94)
  def _reduce_38(val, _values)
     Node.new(:comment, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 96)
  def _reduce_39(val, _values)
     Node.new(:assignment, val[0], [val[2]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 98)
  def _reduce_40(val, _values)
     Node.new(:constant_assignment, val[0], [val[2]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 101)
  def _reduce_41(val, _values)
     Node.new(:return, nil, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 105)
  def _reduce_42(val, _values)
     Node.new(:alias, val[1], val[2])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 109)
  def _reduce_43(val, _values)
     val[0,3].join
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 110)
  def _reduce_44(val, _values)
     Node.new(:variable, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 111)
  def _reduce_45(val, _values)
     Node.new(:string, val[0])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 112)
  def _reduce_46(val, _values)
     Node.new(:integer, val[0].to_i)
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parse.y', 114)
  def _reduce_48(val, _values)
     Node.new(val[1], nil, [val[0], val[2]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 115)
  def _reduce_49(val, _values)
     Node.new(:constant, val[0])
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parse.y', 117)
  def _reduce_51(val, _values)
     Node.new(:instance_variable_get,  val[0])
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parse.y', 124)
  def _reduce_54(val, _values)
     Node.new(:return, nil, val[1])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 129)
  def _reduce_55(val, _values)
     Node.new(:class, val[1], [val[2], val[3]])
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'parse.y', 135)
  def _reduce_57(val, _values)
     val.flatten
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 139)
  def _reduce_58(val, _values)
     Node.new(:instance_variable_def, val[0])
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parse.y', 147)
  def _reduce_62(val, _values)
     val.flatten
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parse.y', 158)
  def _reduce_66(val, _values)
     Node.new(:class_method_call, val[0], [val[2], val[4]])
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'parse.y', 163)
  def _reduce_68(val, _values)
     [val[0], val[2]]
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parse.y', 168)
  def _reduce_70(val, _values)
     [val[0], val[2]]
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 172)
  def _reduce_71(val, _values)
     Node.new(:class_instance_method_call, val[0], [val[2], val[4]])
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 175)
  def _reduce_72(val, _values)
     :plus
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 176)
  def _reduce_73(val, _values)
     :minus
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 177)
  def _reduce_74(val, _values)
     :multiply
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 178)
  def _reduce_75(val, _values)
     :divide
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 179)
  def _reduce_76(val, _values)
     :greater
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 180)
  def _reduce_77(val, _values)
     :less
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 181)
  def _reduce_78(val, _values)
     :equal
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 182)
  def _reduce_79(val, _values)
     :mod
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 186)
  def _reduce_80(val, _values)
     Node.new(:boolean, true)
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 187)
  def _reduce_81(val, _values)
     Node.new(:boolean, false)
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 190)
  def _reduce_82(val, _values)
     Node.new(:blank_line, "")
  end
.,.,

# reduce 83 omitted

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
end   # module Rgo
