#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'


require 'strscan'
require_relative './tokenizer.rb'
require_relative './node.rb'

module Rgo
  class Parser < Racc::Parser

module_eval(<<'...end parse.y/module_eval...', 'parse.y', 89)

def parse(str)
  @q = Tokenizer.new(str).tokens

  puts @q.inspect

  do_parse
end

def next_token
  @q.shift
end
...end parse.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    12,    23,    13,    31,    19,    14,    24,    32,    15,    16,
    17,    12,    21,    13,    22,    18,    14,    25,    26,    15,
    16,    17,    12,    27,    13,    45,    18,    14,    49,   nil,
    15,    16,    17,    12,   nil,    13,   nil,    18,    14,    41,
    31,    15,    16,    17,    32,    12,    43,    13,    18,    42,
    14,   nil,    31,    15,    16,    17,    32,    12,    48,    13,
    18,    46,    14,   nil,   nil,    15,    16,    17,    12,   nil,
    13,   nil,    18,    14,   nil,   nil,    15,    16,    17,    12,
   nil,    13,   nil,    18,    14,   nil,    31,    15,    16,    17,
    32,    12,    50,    13,    18,    53,    14,   nil,   nil,    15,
    16,    17,   nil,    12,   nil,    13,    18,    54,    14,   nil,
    35,    15,    16,    17,    34,   nil,   nil,   nil,    18,   nil,
   nil,    36,    38,    39 ]

racc_action_check = [
     0,    14,     0,    23,     1,     0,    14,    23,     0,     0,
     0,     2,    12,     2,    13,     0,     2,    15,    16,     2,
     2,     2,    22,    19,    22,    34,     2,    22,    45,   nil,
    22,    22,    22,    25,   nil,    25,   nil,    22,    25,    25,
    29,    25,    25,    25,    29,    28,    29,    28,    25,    28,
    28,   nil,    41,    28,    28,    28,    41,    40,    41,    40,
    28,    40,    40,   nil,   nil,    40,    40,    40,    48,   nil,
    48,   nil,    40,    48,   nil,   nil,    48,    48,    48,    50,
   nil,    50,   nil,    48,    50,   nil,    47,    50,    50,    50,
    47,    51,    47,    51,    50,    51,    51,   nil,   nil,    51,
    51,    51,   nil,    52,   nil,    52,    51,    52,    52,   nil,
    24,    52,    52,    52,    24,   nil,   nil,   nil,    52,   nil,
   nil,    24,    24,    24 ]

racc_action_pointer = [
    -6,     4,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,     5,   -11,     6,     9,   nil,   nil,    23,
   nil,   nil,    16,    -4,   103,    27,   nil,   nil,    39,    33,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
    51,    45,   nil,   nil,   nil,    24,   nil,    79,    62,   nil,
    73,    85,    97,   nil,   nil ]

racc_action_default = [
    -4,   -36,    -1,    -2,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -36,   -36,   -36,   -36,   -36,   -26,   -35,   -36,
    -3,   -15,    -4,   -36,   -36,    -4,   -25,    55,   -36,   -36,
   -18,   -20,   -21,   -27,   -29,   -30,   -31,   -32,   -33,   -34,
   -36,   -36,   -16,   -17,   -19,   -36,   -24,   -36,    -4,   -28,
    -4,   -36,   -36,   -23,   -22 ]

racc_goto_table = [
     2,    29,    20,    44,     1,    33,    37,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
   nil,    44,    28,   nil,   nil,    40,   nil,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    51,   nil,
    52,    20,    20 ]

racc_goto_check = [
     2,    14,     3,    15,     1,    13,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,
   nil,    15,     2,   nil,   nil,     2,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
     2,     3,     3 ]

racc_goto_pointer = [
   nil,     4,     0,     0,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -19,   -22,   -26,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,   nil,   nil,   nil,    30,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 23, :_reduce_none,
  1, 24, :_reduce_none,
  2, 24, :_reduce_3,
  0, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  5, 34, :_reduce_13,
  7, 34, :_reduce_14,
  2, 28, :_reduce_15,
  4, 27, :_reduce_16,
  4, 29, :_reduce_17,
  1, 36, :_reduce_18,
  2, 36, :_reduce_19,
  1, 37, :_reduce_20,
  1, 37, :_reduce_21,
  7, 30, :_reduce_22,
  6, 30, :_reduce_23,
  4, 30, :_reduce_24,
  2, 31, :_reduce_25,
  1, 26, :_reduce_26,
  3, 32, :_reduce_27,
  3, 35, :_reduce_28,
  1, 35, :_reduce_none,
  1, 35, :_reduce_30,
  1, 35, :_reduce_31,
  1, 35, :_reduce_none,
  1, 38, :_reduce_33,
  1, 38, :_reduce_34,
  1, 33, :_reduce_35 ]

racc_reduce_n = 36

racc_shift_n = 55

racc_token_table = {
  false => 0,
  :error => 1,
  "if" => 2,
  "(" => 3,
  ")" => 4,
  "else" => 5,
  :KEYWORD_REQUIRE => 6,
  :STRING => 7,
  :KEYWORD_MODULE => 8,
  :CONSTANT => 9,
  :KEYWORD_END => 10,
  :IDENTIFIER => 11,
  :LPAREN => 12,
  :RPAREN => 13,
  :KEYWORD_DEF => 14,
  :KEYWORD_INCLUDE => 15,
  :COMMENT => 16,
  :KEYWORD_ASSIGN => 17,
  :INTEGER => 18,
  :KEYWORD_TRUE => 19,
  :KEYWORD_FALSE => 20,
  :BLANK_LINE => 21 }

racc_nt_base = 22

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"if\"",
  "\"(\"",
  "\")\"",
  "\"else\"",
  "KEYWORD_REQUIRE",
  "STRING",
  "KEYWORD_MODULE",
  "CONSTANT",
  "KEYWORD_END",
  "IDENTIFIER",
  "LPAREN",
  "RPAREN",
  "KEYWORD_DEF",
  "KEYWORD_INCLUDE",
  "COMMENT",
  "KEYWORD_ASSIGN",
  "INTEGER",
  "KEYWORD_TRUE",
  "KEYWORD_FALSE",
  "BLANK_LINE",
  "$start",
  "target",
  "statement_list",
  "statement",
  "comment_statement",
  "module_statement",
  "require_statement",
  "func_call",
  "func_def",
  "include_statement",
  "assignment_statement",
  "blank_line",
  "if_statement",
  "expression",
  "args",
  "arg",
  "boolean" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parse.y', 9)
  def _reduce_3(val, _values, result)
     result = val
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parse.y', 26)
  def _reduce_13(val, _values, result)
     result = "<#{val[2]} implies #{val[4]}>\n"
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 28)
  def _reduce_14(val, _values, result)
     result = "<#{val[2]} implies #{val[4]} otherwise #{val[6]}>\n"
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 31)
  def _reduce_15(val, _values, result)
     result = Node.new(:require, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 34)
  def _reduce_16(val, _values, result)
    			result = Node.new(:module, val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 38)
  def _reduce_17(val, _values, result)
     result = Node.new(:func_call, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 40)
  def _reduce_18(val, _values, result)
     result = Array(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 40)
  def _reduce_19(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 42)
  def _reduce_20(val, _values, result)
     result = Node.new(:string, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 43)
  def _reduce_21(val, _values, result)
     result = Node.new(:variable, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 49)
  def _reduce_22(val, _values, result)
          result = Node.new(:func_def, val[1], [val[3], val[5]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 52)
  def _reduce_23(val, _values, result)
          result = Node.new(:func_def, val[1], [nil, val[4]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 55)
  def _reduce_24(val, _values, result)
          result = Node.new(:func_def, val[1], [nil, val[2]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 59)
  def _reduce_25(val, _values, result)
     result = Node.new(:include, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 61)
  def _reduce_26(val, _values, result)
     result = Node.new(:comment, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 63)
  def _reduce_27(val, _values, result)
     result = Node.new(:assignment, val[0], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 66)
  def _reduce_28(val, _values, result)
     result = val[0,3].join
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parse.y', 68)
  def _reduce_30(val, _values, result)
     result = Node.new(:string, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 69)
  def _reduce_31(val, _values, result)
     result = Node.new(:integer, val[0].to_i)
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parse.y', 74)
  def _reduce_33(val, _values, result)
     result = Node.new(:boolean, true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 75)
  def _reduce_34(val, _values, result)
     result = Node.new(:boolean, false)
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 78)
  def _reduce_35(val, _values, result)
     result = Node.new(:blank_line, "")
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Rgo
