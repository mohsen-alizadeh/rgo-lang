#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'


require 'strscan'
require_relative './tokenizer.rb'
require_relative './node.rb'

module Rgo
  class Parser < Racc::Parser

module_eval(<<'...end parse.y/module_eval...', 'parse.y', 85)

def parse(str)
  @q = Tokenizer.new(str).tokens

  puts @q.inspect

  do_parse
end

def next_token
  @q.shift
end
...end parse.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    29,    29,    17,    32,    30,    30,    41,    46,    19,
    21,    34,    36,    37,    11,    22,    12,    29,    20,    13,
    23,    30,    14,    15,    16,    11,    24,    12,    25,    43,
    13,    47,   nil,    14,    15,    16,    11,   nil,    12,   nil,
   nil,    13,   nil,   nil,    14,    15,    16,    11,   nil,    12,
   nil,   nil,    13,    39,   nil,    14,    15,    16,    11,   nil,
    12,   nil,    40,    13,   nil,   nil,    14,    15,    16,    11,
   nil,    12,   nil,    44,    13,   nil,   nil,    14,    15,    16,
    11,   nil,    12,   nil,   nil,    13,   nil,   nil,    14,    15,
    16,    11,   nil,    12,   nil,   nil,    13,   nil,   nil,    14,
    15,    16,    11,   nil,    12,   nil,    51,    13,   nil,   nil,
    14,    15,    16,    11,   nil,    12,   nil,    52,    13,   nil,
    29,    14,    15,    16,    30,   nil,    48 ]

racc_action_check = [
    22,    27,    39,     1,    22,    27,    39,    27,    39,    11,
    13,    22,    22,    22,     0,    13,     0,    21,    12,     0,
    14,    21,     0,     0,     0,     2,    15,     2,    17,    32,
     2,    43,   nil,     2,     2,     2,    20,   nil,    20,   nil,
   nil,    20,   nil,   nil,    20,    20,    20,    23,   nil,    23,
   nil,   nil,    23,    23,   nil,    23,    23,    23,    26,   nil,
    26,   nil,    26,    26,   nil,   nil,    26,    26,    26,    38,
   nil,    38,   nil,    38,    38,   nil,   nil,    38,    38,    38,
    46,   nil,    46,   nil,   nil,    46,   nil,   nil,    46,    46,
    46,    48,   nil,    48,   nil,   nil,    48,   nil,   nil,    48,
    48,    48,    49,   nil,    49,   nil,    49,    49,   nil,   nil,
    49,    49,    49,    50,   nil,    50,   nil,    50,    50,   nil,
    45,    50,    50,    50,    45,   nil,    45 ]

racc_action_pointer = [
     8,     3,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     9,    -2,     9,    17,   nil,    28,   nil,   nil,
    30,    10,    -7,    41,   nil,   nil,    52,    -6,   nil,   nil,
   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,    63,    -5,
   nil,   nil,   nil,    27,   nil,   113,    74,   nil,    85,    96,
   107,   nil,   nil ]

racc_action_default = [
    -4,   -34,    -1,    -2,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -34,   -34,   -34,   -34,   -34,   -25,   -34,    -3,   -14,
    -4,   -34,   -34,    -4,   -24,    53,   -34,   -34,   -17,   -19,
   -20,   -26,   -28,   -29,   -30,   -31,   -32,   -33,   -34,   -34,
   -15,   -16,   -18,   -34,   -23,   -34,    -4,   -27,    -4,   -34,
   -34,   -22,   -21 ]

racc_goto_table = [
     2,    27,    18,    42,     1,    31,    35,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
    26,    42,   nil,    38,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,    50,    18,
    18 ]

racc_goto_check = [
     2,    13,     3,    14,     1,    12,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,
     2,    14,   nil,     2,   nil,   nil,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,     2,     3,
     3 ]

racc_goto_pointer = [
   nil,     4,     0,     0,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -17,   -20,   -24,   -16 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,   nil,   nil,   nil,    28,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 22, :_reduce_none,
  1, 23, :_reduce_none,
  2, 23, :_reduce_3,
  0, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  5, 32, :_reduce_12,
  7, 32, :_reduce_13,
  2, 27, :_reduce_14,
  4, 26, :_reduce_15,
  4, 28, :_reduce_16,
  1, 34, :_reduce_17,
  2, 34, :_reduce_18,
  1, 35, :_reduce_19,
  1, 35, :_reduce_20,
  7, 29, :_reduce_21,
  6, 29, :_reduce_22,
  4, 29, :_reduce_23,
  2, 30, :_reduce_24,
  1, 25, :_reduce_25,
  3, 31, :_reduce_26,
  3, 33, :_reduce_27,
  1, 33, :_reduce_none,
  1, 33, :_reduce_29,
  1, 33, :_reduce_30,
  1, 33, :_reduce_none,
  1, 36, :_reduce_32,
  1, 36, :_reduce_33 ]

racc_reduce_n = 34

racc_shift_n = 53

racc_token_table = {
  false => 0,
  :error => 1,
  "if" => 2,
  "(" => 3,
  ")" => 4,
  "else" => 5,
  :KEYWORD_REQUIRE => 6,
  :STRING => 7,
  :KEYWORD_MODULE => 8,
  :CONSTANT => 9,
  :KEYWORD_END => 10,
  :IDENTIFIER => 11,
  :LPAREN => 12,
  :RPAREN => 13,
  :KEYWORD_DEF => 14,
  :KEYWORD_INCLUDE => 15,
  :COMMENT => 16,
  :KEYWORD_ASSIGN => 17,
  :INTEGER => 18,
  :KEYWORD_TRUE => 19,
  :KEYWORD_FALSE => 20 }

racc_nt_base = 21

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"if\"",
  "\"(\"",
  "\")\"",
  "\"else\"",
  "KEYWORD_REQUIRE",
  "STRING",
  "KEYWORD_MODULE",
  "CONSTANT",
  "KEYWORD_END",
  "IDENTIFIER",
  "LPAREN",
  "RPAREN",
  "KEYWORD_DEF",
  "KEYWORD_INCLUDE",
  "COMMENT",
  "KEYWORD_ASSIGN",
  "INTEGER",
  "KEYWORD_TRUE",
  "KEYWORD_FALSE",
  "$start",
  "target",
  "statement_list",
  "statement",
  "comment_statement",
  "module_statement",
  "require_statement",
  "func_call",
  "func_def",
  "include_statement",
  "assignment_statement",
  "if_statement",
  "expression",
  "args",
  "arg",
  "boolean" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parse.y', 9)
  def _reduce_3(val, _values, result)
     result = val
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parse.y', 24)
  def _reduce_12(val, _values, result)
     result = "<#{val[2]} implies #{val[4]}>\n"
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 26)
  def _reduce_13(val, _values, result)
     result = "<#{val[2]} implies #{val[4]} otherwise #{val[6]}>\n"
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 29)
  def _reduce_14(val, _values, result)
     result = Node.new(:require, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 32)
  def _reduce_15(val, _values, result)
    			result = Node.new(:module, val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 36)
  def _reduce_16(val, _values, result)
     result = Node.new(:func_call, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 38)
  def _reduce_17(val, _values, result)
     result = Array(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 38)
  def _reduce_18(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 40)
  def _reduce_19(val, _values, result)
     result = Node.new(:string, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 41)
  def _reduce_20(val, _values, result)
     result = Node.new(:variable, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 47)
  def _reduce_21(val, _values, result)
          result = Node.new(:func_def, val[1], [val[3], val[5]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 50)
  def _reduce_22(val, _values, result)
          result = Node.new(:func_def, val[1], [nil, val[4]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 53)
  def _reduce_23(val, _values, result)
          result = Node.new(:func_def, val[1], [nil, val[2]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 57)
  def _reduce_24(val, _values, result)
     result = Node.new(:include, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 59)
  def _reduce_25(val, _values, result)
     result = Node.new(:comment, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 61)
  def _reduce_26(val, _values, result)
     result = Node.new(:assignment, val[0], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 64)
  def _reduce_27(val, _values, result)
     result = val[0,3].join
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parse.y', 66)
  def _reduce_29(val, _values, result)
     result = Node.new(:string, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 67)
  def _reduce_30(val, _values, result)
     result = Node.new(:integer, val[0].to_i)
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parse.y', 72)
  def _reduce_32(val, _values, result)
     result = Node.new(:boolean, true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 73)
  def _reduce_33(val, _values, result)
     result = Node.new(:boolean, false)
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Rgo
